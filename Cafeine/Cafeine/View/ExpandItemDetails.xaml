<ContentDialog x:Class="Cafeine.ExpandItemDetails"
               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
               xmlns:local="using:Cafeine"
               xmlns:m="using:Cafeine.Model"
               xmlns:vmr="using:Cafeine.View_Resource"
               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
               xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
               xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
               xmlns:core="using:Microsoft.Xaml.Interactions.Core"
               mc:Ignorable="d"
               PrimaryButtonText="Save"
               SecondaryButtonText="Cancel"
               DataContext="{Binding ExpandDialog, Source={StaticResource Locator}}">
    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="PrimaryButtonClick">
            <core:InvokeCommandAction Command="{x:Bind Vm.PrimaryButton}" />
        </core:EventTriggerBehavior>
        <core:EventTriggerBehavior EventName="SecondaryButtonClick">
            <core:InvokeCommandAction Command="{x:Bind Vm.SecondaryButton}" />
        </core:EventTriggerBehavior>

    </interactivity:Interaction.Behaviors>
    <ContentDialog.Template>
        <ControlTemplate TargetType="ContentDialog">
            <Border x:Name="Container">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="ButtonsVisibilityStates">
                        <VisualState x:Name="AllVisible" />
                        <VisualState x:Name="NoneVisible">
                            <VisualState.Setters>
                                <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                                <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PrimaryVisible">
                            <VisualState.Setters>
                                <Setter Target="PrimaryButton.(Grid.Column)" Value="2" />
                                <Setter Target="PrimaryButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="PrimaryButton.Margin" Value="2,0,0,0" />
                                <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="SecondaryVisible">
                            <VisualState.Setters>
                                <Setter Target="SecondaryButton.(Grid.Column)" Value="2" />
                                <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="SecondaryButton.Margin" Value="2,0,0,0" />
                                <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="CloseVisible">
                            <VisualState.Setters>
                                <Setter Target="CloseButton.(Grid.Column)" Value="2" />
                                <Setter Target="CloseButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="CloseButton.Margin" Value="2,0,0,0" />
                                <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                                <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PrimaryAndSecondaryVisible">
                            <VisualState.Setters>
                                <Setter Target="PrimaryButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="SecondaryButton.(Grid.Column)" Value="2" />
                                <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="SecondaryButton.Margin" Value="2,0,0,0" />
                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PrimaryAndCloseVisible">
                            <VisualState.Setters>
                                <Setter Target="PrimaryButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="CloseButton.(Grid.Column)" Value="2" />
                                <Setter Target="CloseButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="CloseButton.Margin" Value="2,0,0,0" />
                                <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="SecondaryAndCloseVisible">
                            <VisualState.Setters>
                                <Setter Target="SecondaryButton.(Grid.Column)" Value="0" />
                                <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="SecondaryButton.Margin" Value="0,0,2,0" />
                                <Setter Target="CloseButton.(Grid.Column)" Value="2" />
                                <Setter Target="CloseButton.(Grid.ColumnSpan)" Value="2" />
                                <Setter Target="CloseButton.Margin" Value="2,0,0,0" />
                                <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DefaultButtonStates">
                        <VisualState x:Name="NoDefaultButton" />
                        <VisualState x:Name="PrimaryAsDefaultButton">
                            <VisualState.Setters>
                                <Setter Target="PrimaryButton.Style" Value="{StaticResource AccentButtonStyle}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="SecondaryAsDefaultButton">
                            <VisualState.Setters>
                                <Setter Target="SecondaryButton.Style" Value="{StaticResource AccentButtonStyle}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="CloseAsDefaultButton">
                            <VisualState.Setters>
                                <Setter Target="CloseButton.Style" Value="{StaticResource AccentButtonStyle}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid x:Name="LayoutRoot">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" FlowDirection="{TemplateBinding FlowDirection}" BorderThickness="{ThemeResource ContentDialogBorderWidth}" BorderBrush="{TemplateBinding BorderBrush}" MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}" MinWidth="{ThemeResource ContentDialogMinWidth}" MinHeight="{ThemeResource ContentDialogMinHeight}">
                        <Grid x:Name="DialogSpace" VerticalAlignment="Stretch" Padding="{ThemeResource ContentDialogPadding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollViewer x:Name="ContentScrollViewer" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" ZoomMode="Disabled" Margin="{ThemeResource ContentDialogContentScrollViewerMargin}" IsTabStop="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <ContentControl x:Name="Title" Margin="{ThemeResource ContentDialogTitleMargin}" Content="{TemplateBinding Title}" ContentTemplate="{TemplateBinding TitleTemplate}" FontSize="20" FontFamily="XamlAutoFontFamily" FontWeight="Normal" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" VerticalAlignment="Top" IsTabStop="False">
                                        <ContentControl.Template>
                                            <ControlTemplate TargetType="ContentControl">
                                                <ContentPresenter Content="{TemplateBinding Content}" MaxLines="2" TextWrapping="Wrap" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </ControlTemplate>
                                        </ContentControl.Template>
                                    </ContentControl>
                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" FontSize="{ThemeResource ControlContentThemeFontSize}" FontFamily="{ThemeResource ContentControlThemeFontFamily}" Margin="{ThemeResource ContentDialogContentMargin}" Foreground="{TemplateBinding Foreground}" Grid.Row="1" TextWrapping="Wrap" />
                                </Grid>
                            </ScrollViewer>
                            <Grid x:Name="CommandSpace" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="24,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="0.5*" />
                                    <ColumnDefinition Width="0.5*" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PrimaryButton" Content="{TemplateBinding PrimaryButtonText}" IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}" Style="{TemplateBinding PrimaryButtonStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,2,0" Grid.Column="0" />
                                <Button x:Name="SecondaryButton" Content="{TemplateBinding SecondaryButtonText}" IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}" Style="{TemplateBinding SecondaryButtonStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2,0,2,0" Grid.Column="1" Grid.ColumnSpan="2" />
                                <Button x:Name="CloseButton" Content="{TemplateBinding CloseButtonText}" Style="{TemplateBinding CloseButtonStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2,0,0,0" Grid.Column="3" />
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
        </ControlTemplate>
    </ContentDialog.Template>
    <ContentDialog.Resources>
        <ResourceDictionary>
            <m:CollectionListItemClicked x:Key="CLICConv" />
            <Thickness x:Key="ContentDialogBorderWidth">0</Thickness>
            <Thickness x:Key="ContentDialogPadding">0,0,0,24</Thickness>
            <x:Double x:Key="ContentDialogMaxWidth">600</x:Double>
            <x:Double x:Key="ContentDialogMaxHeight">500</x:Double>
            <ResourceDictionary.MergedDictionaries>
                <local:Generics/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ContentDialog.Resources>

    <Grid x:Name="popupp" VerticalAlignment="Center">
        <Grid.Background>
            <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}" />
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.6*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <RelativePanel Grid.Column="0">
            <Image x:Name="BackgroundBlur" MinWidth="500" Stretch="Uniform" Source="{x:Bind Vm.source}" HorizontalAlignment="Center" RelativePanel.AlignHorizontalCenterWithPanel="True">
                <interactivity:Interaction.Behaviors>
                    <behaviors:Blur x:Name="BlurBehavior" Value="6" Duration="300" AutomaticallyStart="True" />
                </interactivity:Interaction.Behaviors>
            </Image>
            <Rectangle Fill="Black" Opacity="0.4" MinWidth="250" MinHeight="600" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
            <!--<Image x:Name="image" Height="250" Width="176" HorizontalAlignment="Left" Canvas.ZIndex="1" RelativePanel.AlignVerticalCenterWithPanel="True"/>-->
            <TextBlock x:Name="Title" FontFamily="ms-appx:/Assets/Fonts/Montserrat/Montserrat-ExtraBold.ttf#Montserrat ExtraBold" FontSize="23" FontWeight="Black" Text="{x:Bind Vm.Item.Item_Title}" Padding="8,0,12,0" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True" TextWrapping="WrapWholeWords" Foreground="White" TextAlignment="Right" OpticalMarginAlignment="TrimSideBearings" CharacterSpacing="12" />
        </RelativePanel>
        
        <Grid Grid.Column="1">
            <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Hidden">
                <StackPanel VerticalAlignment="Top" Padding="24,0,0,0" Width="375" ScrollViewer.VerticalScrollMode="Enabled" Orientation="Vertical">
            <FlyoutBase.AttachedFlyout>
                <MenuFlyout />
            </FlyoutBase.AttachedFlyout>
            <TextBlock HorizontalAlignment="Left" Margin="0,12,0,0" Text="Score" VerticalAlignment="Top" OpticalMarginAlignment="TrimSideBearings" />
            <ComboBox Width="160"
                      HorizontalAlignment="Left"
                      Margin="0,4,0,0"
                      SelectedIndex="{x:Bind Vm.selectedindex,Mode=TwoWay}"
                      Style="{StaticResource ComboBoxStyle}"
                      BorderThickness="0"
                      Opacity="1">
                <TextBlock Text="(1) Appaling" />
                <TextBlock Text="(2) Horrible" />
                <TextBlock Text="(3) Very bad" />
                <TextBlock Text="(4) bad" />
                <TextBlock Text="(5) Average" />
                <TextBlock Text="(6) Fine" />
                <TextBlock Text="(7) Good" />
                <TextBlock Text="(8) very Good" />
                <TextBlock Text="(9) great" />
                <TextBlock Text="(10) Masterpiece" />
            </ComboBox>
            
            <TextBlock x:Name="StatusLabel" HorizontalAlignment="Left" Text="Status" VerticalAlignment="Top" OpticalMarginAlignment="TrimSideBearings"/>
            <ComboBox Width="160"
                      SelectedIndex="{x:Bind Vm.ItemStatus,Mode=TwoWay}"
                      Style="{StaticResource ComboBoxStyle}"
                      BorderThickness="0">
                <TextBlock Text="Watching" />
                <TextBlock Text="Completed" />
                <TextBlock Text="On Hold" />
                <TextBlock Text="Dropped" />
                <TextBlock Text="Planned To Watch" />

            </ComboBox>
            <TextBlock x:Name="EpisodesLabel" Margin="0,8,0,0" Text="Episodes" HorizontalAlignment="Left" VerticalAlignment="Top" OpticalMarginAlignment="TrimSideBearings" />
            <TextBox Width="271" Height="31" Margin="0,4,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource TextBoxStyle}" Text="{x:Bind Vm.EpisodesChapters, Mode=TwoWay}" />

            <TextBlock Text="Collection List" Margin="0,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" OpticalMarginAlignment="TrimSideBearings" />
            <ListView ItemsSource="{x:Bind Vm.Files}" Margin="0,4,24,0" IsItemClickEnabled="True">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                        <core:InvokeCommandAction Command="{x:Bind Vm.CollectionListItemClicked}"
                                                  InputConverter="{StaticResource CLICConv}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="m:LocalDirectoryFile">
                        <TextBlock Text="{x:Bind Title}" ToolTipService.ToolTip="{x:Bind Title}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

        </StackPanel>
    
            </ScrollViewer>
        </Grid>
        </Grid>
</ContentDialog>
