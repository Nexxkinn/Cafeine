<mvvm:BasePage
    x:Class="Cafeine.Views.ItemDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:Cafeine.Models"
    xmlns:mvvm="using:Cafeine.Services.Mvvm"
    xmlns:r="using:Cafeine.Views.Resources"
    xmlns:vm="using:Cafeine.ViewModels"
    Background="{ThemeResource LegacyDarkBlue}"
    Loaded="Page_Loaded"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">
    <Page.DataContext>
        <vm:ItemDetailsViewModel />
    </Page.DataContext>
    <Page.Resources>
        <r:ItemDetailsPage/>
    </Page.Resources>
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <DrillInNavigationTransitionInfo />
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Grid>
        <ScrollViewer x:Name="ItemDetailScroller">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid
                    x:Name="BackgroundGrid"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Stretch"
                    SizeChanged="OnBackgroundGridSizeChanged">
                    <Grid.Background>
                        <ImageBrush
                            x:Name="BackgroundImage"
                            AlignmentY="Top"
                            ImageOpened="BackgroundImage_ImageOpened"
                            ImageSource="{x:Bind Mode=OneWay, Path=Vm.ImageSource.Path}"
                            Opacity="0"
                            Stretch="UniformToFill" />
                    </Grid.Background>
                </Grid>
                <SplitView
                    Grid.ColumnSpan="2"
                    DisplayMode="CompactOverlay"
                    IsPaneOpen="{x:Bind Vm.IsPaneOpened.Value, Mode=TwoWay}"
                    LightDismissOverlayMode="On"
                    OpenPaneLength="350"
                    PaneBackground="{x:Bind Vm.PaneBackground, Mode=OneWay}"
                    Template="{StaticResource CafeineSplitView}">
                    <SplitView.Pane>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="12" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="56" />
                                <RowDefinition Height="48" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <AppBarButton
                                Grid.Row="1"
                                Width="48"
                                Height="56"
                                MinHeight="28"
                                Command="{x:Bind Vm.UserItemDetailsClicked}"
                                IsEnabled="{x:Bind Vm.SetDeleteButtonLoad.Value, Mode=OneWay}"
                                LabelPosition="Collapsed"
                                Style="{StaticResource ReducedAppBarButtonRevealStyle}">
                                <AppBarButton.Content>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock
                                            FontWeight="Bold"
                                            Text="{x:Bind Vm.User.Watched_Read, Mode=OneWay}"
                                            TextAlignment="Center"
                                            TextLineBounds="Tight" />
                                        <Line
                                            Margin="0,4"
                                            HorizontalAlignment="Center"
                                            Stretch="Fill"
                                            Stroke="White"
                                            StrokeDashCap="Square"
                                            StrokeEndLineCap="Round"
                                            StrokeStartLineCap="Round"
                                            StrokeThickness="1.5"
                                            X2="20" />
                                        <TextBlock
                                            Text="{x:Bind Vm.Service.Episodes_Chapters, Mode=OneWay}"
                                            TextAlignment="Center"
                                            TextLineBounds="Tight" />
                                    </StackPanel>
                                </AppBarButton.Content>
                            </AppBarButton>
                            <AppBarButton
                                Grid.Row="2"
                                Width="48"
                                Height="48"
                                Command="{x:Bind Vm.UserItemDetailsClicked}"
                                IsEnabled="{x:Bind Vm.SetDeleteButtonLoad.Value, Mode=OneWay}"
                                Style="{StaticResource ReducedAppBarButtonRevealStyle}">
                                <AppBarButton.Content>
                                    <TextBlock Text="N" />
                                </AppBarButton.Content>
                            </AppBarButton>
                            <AppBarButton
                                x:Name="Delete"
                                Grid.Row="3"
                                Width="48"
                                Height="48"
                                VerticalAlignment="Bottom"
                                x:Load="{x:Bind Vm.SetDeleteButtonLoad.Value, Mode=OneWay}"
                                Command="{x:Bind Vm.DeleteButtonClicked}"
                                Style="{StaticResource ReducedAppBarButtonRevealStyle}">
                                <AppBarButton.Icon>
                                    <FontIcon Margin="3" Glyph="&#xE107;" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                x:Name="Add"
                                Grid.Row="3"
                                Width="48"
                                Height="48"
                                VerticalAlignment="Bottom"
                                x:Load="{x:Bind Vm.SetAddButtonLoad, Mode=OneWay}"
                                Command="{x:Bind Vm.AddButtonClicked}"
                                Style="{StaticResource ReducedAppBarButtonRevealStyle}">
                                <AppBarButton.Icon>
                                    <FontIcon Margin="3" Glyph="&#xE109;" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <RelativePanel
                                Grid.Row="1"
                                Grid.Column="2"
                                VerticalAlignment="Center">
                                <TextBlock
                                    x:Name="Header1"
                                    FontSize="16"
                                    RelativePanel.AlignVerticalCenterWithPanel="True"
                                    Text="Episodes seen" />
                                <Button
                                    x:Name="UpButton"
                                    Command="{x:Bind Vm.PlusOneTotalSeenTextBlock}"
                                    Content="+"
                                    RelativePanel.LeftOf="userepisodestext" />
                                <TextBox
                                    x:Name="userepisodestext"
                                    BorderThickness="0"
                                    RelativePanel.AlignVerticalCenterWithPanel="True"
                                    RelativePanel.LeftOf="line"
                                    Style="{StaticResource FluentTextBoxStyle}"
                                    Text="{x:Bind Vm.TotalSeenTextBox.Value, Mode=TwoWay}" />
                                <Line
                                    x:Name="line"
                                    Margin="8,0,2,0"
                                    HorizontalAlignment="Center"
                                    RelativePanel.AlignVerticalCenterWithPanel="True"
                                    RelativePanel.LeftOf="EpisodesChapters"
                                    Stroke="White"
                                    StrokeDashCap="Square"
                                    StrokeEndLineCap="Round"
                                    StrokeStartLineCap="Round"
                                    StrokeThickness="1"
                                    X2="5"
                                    Y1="14" />
                                <TextBlock
                                    x:Name="EpisodesChapters"
                                    Margin="2,0"
                                    RelativePanel.AlignRightWithPanel="True"
                                    RelativePanel.AlignVerticalCenterWithPanel="True"
                                    Text="{x:Bind Vm.Service.Episodes_Chapters, Mode=OneWay}" />

                            </RelativePanel>
                            <RelativePanel
                                Grid.Row="2"
                                Grid.Column="2"
                                VerticalAlignment="Center">
                                <TextBlock
                                    x:Name="Header2"
                                    FontSize="16"
                                    RelativePanel.AlignVerticalCenterWithPanel="True"
                                    Text="Status" />
                                <ComboBox
                                    BorderThickness="0"
                                    PlaceholderText="Not Yet Added"
                                    RelativePanel.AlignRightWith="Header2"
                                    RelativePanel.AlignRightWithPanel="True"
                                    SelectedIndex="{x:Bind Vm.UserStatusComboBox.Value, Mode=TwoWay}">
                                    <ComboBoxItem Content="Currently Watching" />
                                    <ComboBoxItem Content="Completed" />
                                    <ComboBoxItem Content="On Hold" />
                                    <ComboBoxItem Content="Dropped" />
                                    <ComboBoxItem Content="Plan to Watch" />
                                </ComboBox>
                            </RelativePanel>
                        </Grid>
                    </SplitView.Pane>
                    <Grid Margin="8,48,28,20">
                        <RelativePanel>
                            <Image
                                x:Name="cover"
                                MinWidth="140"
                                MinHeight="204"
                                MaxWidth="142"
                                MaxHeight="204"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Source="{x:Bind Vm.ImageSource.Path, Mode=OneWay}" />
                            <StackPanel
                                MaxHeight="204"
                                Margin="14,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                RelativePanel.RightOf="cover">
                                <TextBlock
                                    MaxWidth="500"
                                    FontSize="22"
                                    FontWeight="SemiBold"
                                    MaxLines="2"
                                    Text="{x:Bind Path=Vm.Service.Title, Mode=OneWay}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    x:Name="ItemStatusTextBlock"
                                    FontSize="14"
                                    Text="{x:Bind Path=Vm.StatusTextBlock, Mode=OneWay}" />
                                <RatingControl
                                    x:Name="rating"
                                    Margin="0,0,0,-8"
                                    HorizontalAlignment="Left"
                                    Caption="{x:Bind Path=Vm.ScoreTextBlock, Mode=OneWay}"
                                    InitialSetValue="0"
                                    IsReadOnly="True"
                                    PlaceholderValue="{x:Bind Path=Vm.ScorePlaceHolderRating, Mode=OneWay}" />
                                <!--  IsReadOnly="{x:Bind Path=Vm.ItemScoreReadOnly.Value, Mode=OneWay}"  -->
                                <ProgressRing
                                    x:Name="progressring"
                                    HorizontalAlignment="Left"
                                    x:Load="{x:Bind Vm.ItemDetailsProgressRing, Mode=OneWay}"
                                    IsActive="True" />
                                <TextBlock
                                    x:Name="description"
                                    MaxWidth="500"
                                    HorizontalAlignment="Left"
                                    x:Load="{x:Bind Vm.LoadItemDetails.Value, Mode=OneWay}"
                                    FontSize="13"
                                    Foreground="#D7FFFFFF"
                                    MaxLines="5"
                                    Text="{x:Bind Path=Vm.DescriptionTextBlock, Mode=OneWay}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="Wrap" />
                            </StackPanel>
                        </RelativePanel>
                    </Grid>
                </SplitView>
                <Border Grid.Row="1">
                    <StackPanel x:Name="ItemOptions">
                        <AppBarButton
                            Width="48"
                            Height="48"
                            Command="{x:Bind Vm.EpisodeListsClicked}"
                            LabelPosition="Collapsed"
                            Style="{StaticResource ReducedAppBarButtonRevealStyle}"
                            ToolTipService.ToolTip="Episode Lists">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE188;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            Width="48"
                            Height="48"
                            Command="{x:Bind Vm.EpisodeSettingsClicked}"
                            LabelPosition="Collapsed"
                            Style="{StaticResource ReducedAppBarButtonRevealStyle}"
                            ToolTipService.ToolTip="Configure">
                            <AppBarButton.Icon>
                                <FontIcon Margin="3" Glyph="&#xE15E;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                    </StackPanel>
                </Border>
                <Grid
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="8,0,0,0">
                    <StackPanel
                        x:Name="episodenotfound"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        x:Load="{x:Bind Vm.LoadEpisodeNotFound, Mode=OneWay}"
                        Opacity="0.5"
                        Orientation="Vertical">
                        <FontIcon
                            Margin="12"
                            FontSize="40"
                            Glyph="&#xea39;" />
                        <TextBlock
                            Width="200"
                            TextAlignment="Center"
                            TextWrapping="Wrap">
                            No Episodes found<LineBreak />
                            Try to use another source</TextBlock>
                    </StackPanel>
                    <StackPanel>
                        <Grid
                            x:Name="EpisodesListConfiguration"
                            Height="48"
                            VerticalAlignment="Top"
                            Background="{ThemeResource LegacyDarkBlue}"
                            Visibility="{x:Bind Vm.LoadEpisodesListConfiguration, Mode=OneWay}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                                x:Name="backgroundadded"
                                Grid.ColumnSpan="2"
                                VerticalAlignment="Stretch"
                                Background="{ThemeResource LegacyDarkBlue}" />
                            <StackPanel VerticalAlignment="Stretch" Orientation="Horizontal">
                                <ComboBox
                                    Margin="0"
                                    VerticalAlignment="Center"
                                    Header="Sort:"
                                    LightDismissOverlayMode="On"
                                    SelectedIndex="0"
                                    Template="{StaticResource CustomizedComboBox}">
                                    <ComboBoxItem Content="Ascending" />
                                    <ComboBoxItem Content="Descending" />
                                </ComboBox>
                            </StackPanel>
                        </Grid>
                        <GridView
                            x:Name="episodesitem"
                            Canvas.ZIndex="-1"
                            ContainerContentChanging="Episodesitem_ContainerContentChanging"
                            ItemsSource="{x:Bind Path=Vm.Episodelist, Mode=OneWay}"
                            ItemContainerStyle="{StaticResource ItemDetailsListItemContainerStyle}"
                            Visibility="{x:Bind Path=Vm.LoadEpisodeLists, Mode=OneWay}">
                            <GridView.ItemTemplate>
                                <DataTemplate x:DataType="model:ContentList">
                                    <r:ItemDetailsList contentlist="{x:Bind}" />
                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </GridView>
                    </StackPanel>
                    <StackPanel
                        x:Name="EpisodeSettings"
                        Grid.RowSpan="2"
                        Margin="0,14"
                        x:Load="{x:Bind Path=Vm.LoadEpisodeSettings, Mode=OneWay}"
                        Orientation="Vertical">
                        <TextBlock FontSize="16" Text="Directory Source" />
                        <TextBlock
                            FontSize="12"
                            Opacity="0.8"
                            Text="Assosiate your local files with episodes list" />
                        <Grid
                            x:Name="FolderView"
                            Margin="0,12"
                            Visibility="{x:Bind (x:Boolean)Vm.IsOfflineItemAvailable, Mode=OneWay}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <SymbolIcon Symbol="Folder" />
                            <TextBlock
                                x:Name="FolderName"
                                Grid.Column="1"
                                Margin="8,0"
                                Opacity="0.8"
                                Text="{x:Bind Vm.Offline.FolderToken, Mode=OneWay}" />
                        </Grid>
                        <Button
                            x:Name="RunSetupButton"
                            Margin="0,12"
                            x:Load="{x:Bind Vm.IsOfflineItemAvailable.Equals(x:False), Mode=OneWay}"
                            Click="{x:Bind Vm.CreateOfflineItem}"
                            Content="Run setup" />


                        <StackPanel x:Name="OfflineItemSettings" x:Load="{x:Bind Vm.IsOfflineItemAvailable, Mode=OneWay}">
                            <TextBlock
                                Margin="0,24,0,8"
                                FontSize="16"
                                Text="Episodes list" />
                            <CheckBox Content="Get episode list from service" />
                            <CheckBox Margin="0,4" Content="Do not use thumbnail from service" />
                            <CheckBox Content="Use custom regex to identify local files with episodes" />
                            <TextBox
                                Width="400"
                                Margin="0,8,0,0"
                                HorizontalAlignment="Left"
                                IsEnabled="False"
                                Text="Default" />
                            <StackPanel Margin="0,8" Orientation="Horizontal">
                                <Button Content="Save" IsEnabled="False" />
                            </StackPanel>
                            <TextBlock
                                Margin="0,24,0,4"
                                FontSize="16"
                                Text="Reset" />
                            <TextBlock Opacity="0.8">
                                <Run>Use this function if you want to rescan the folder and reconnect</Run>
                                <LineBreak /><Run>all files with corresponded episodes listed.</Run>
                            </TextBlock>
                            <Button Margin="0,4" Content="Reset and Reconnect" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>
        </ScrollViewer>
    </Grid>
</mvvm:BasePage>
